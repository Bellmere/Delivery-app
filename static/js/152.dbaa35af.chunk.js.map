{"version":3,"file":"static/js/152.dbaa35af.chunk.js","mappings":"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","sources":["components/Fields/BaseInput.jsx","components/Buttons/Main/MainButton.jsx","helpers.js","components/Forms/ClientForm/CLientForm.jsx","pages/ShoppingCart.jsx"],"sourcesContent":["export default function BaseInput({\n  name,\n  label = '',\n  type = 'text',\n  placeholder = '',\n  value,\n  onChange,\n}) {\n  return (\n    <>\n      <label className=\"base__label\">\n        {label}\n        <input\n          className=\"base__input\"\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n}\n","import './MainButton.css';\n\nexport const MainButton = props => {\n  return (\n    <button className=\"main__button\" type=\"submit\">\n      {props.children}\n    </button>\n  );\n};\n","export const validationForm = ({\n  basketItems,\n  name,\n  email,\n  phone,\n  address,\n}) => {\n  const errors = {};\n  if (!name) {\n    errors.name = 'Name is required';\n  }\n  if (!email) {\n    errors.email = 'Email is required';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n    errors.email = 'Email is invalid';\n  }\n  if (!phone) {\n    errors.phone = 'Phone is required';\n  }\n  if (!address) {\n    errors.address = 'Address is required';\n  }\n  if (basketItems.length <= 0) {\n    errors.basketItems = 'Your basket is empty!';\n  }\n  return errors;\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport BaseInput from 'components/Fields/BaseInput';\nimport { Container } from 'components/styled/Container';\nimport { MainButton } from 'components/Buttons/Main/MainButton';\nimport { validationForm } from 'helpers';\nimport {\n  increaseQuantity,\n  decreaseQuantity,\n  remove,\n} from 'redux/MenuSlice/MenuSlice';\n\nimport './CLientForm.css';\n\nexport const ClientForm = () => {\n  const cartItems = useSelector(state => state.menu.items);\n  console.log(cartItems);\n  const dispatch = useDispatch();\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const dataFormInputs = Object.fromEntries(Array.from(new FormData(e.target)));\n    const basketItems = cartItems.map(({ id, ...rest }) => rest);\n    const dataForm = { ...dataFormInputs, basketItems };\n\n    const errors = validationForm(dataForm);\n    if (Object.keys(errors).length > 0) {\n      const errorMessages = Object.values(errors).join('\\n');\n      return toast.error(errorMessages);\n    }\n\n    const orderForm = { ...dataForm, total: totalPrice };\n    console.log(orderForm);\n\n    try {\n      const response = await fetch('https://delivery-project.herokuapp.com/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(orderForm),\n      });\n\n      if (response.ok) {\n        toast.success('The form has been submitted.');\n      } else {\n        const errorMessage = await response.text();\n        throw new Error(errorMessage);\n      }\n    } catch (error) {\n      toast.error('An error occurred while submitting the form.');\n      console.error(error);\n    }\n  };\n\n\n  const totalPrice = cartItems.reduce((total, item) => {\n    const itemPrice = item.price * item.quantity;\n    return total + itemPrice;\n  }, 0);\n\n  const handleIncreaseQuantity = itemId => {\n    dispatch(increaseQuantity({ id: itemId }));\n  };\n\n  const handleDecreaseQuantity = itemId => {\n    dispatch(decreaseQuantity({ id: itemId }));\n  };\n\n  const handleDeleteItem = itemId => {\n    dispatch(remove({ id: itemId }));\n  };\n\n  return (\n    <section className=\"order__section\">\n      <Container>\n        <form className=\"order-from\" onSubmit={handleSubmit}>\n          <div className=\"order-form--wrapper\">\n            <div className=\"credentials--wrap\">\n              <div className=\"credentials__item\">\n                <BaseInput\n                  name=\"name\"\n                  type=\"text\"\n                  label=\"Name:\"\n                  placeholder=\"Name:\"\n                />\n              </div>\n              <div className=\"credentials__item\">\n                <BaseInput\n                  name=\"email\"\n                  type=\"email\"\n                  label=\"Email:\"\n                  placeholder=\"Email:\"\n                />\n              </div>\n              <div className=\"credentials__item\">\n                <BaseInput\n                  name=\"phone\"\n                  type=\"tel\"\n                  label=\"Phone:\"\n                  placeholder=\"Phone:\"\n                />\n              </div>\n              <div className=\"credentials__item\">\n                <BaseInput\n                  name=\"address\"\n                  type=\"text\"\n                  label=\"Address:\"\n                  placeholder=\"Address:\"\n                />\n              </div>\n            </div>\n            <div className=\"order-items\">\n              <ul className=\"order__list\">\n                {cartItems.map((item, index) => {\n                  const itemPrice = item.price * item.quantity;\n\n                  return (\n                    <li className=\"order__item\" key={index}>\n                      <div className=\"order__photo--wrap\">\n                        <img src={item.src} alt={item.name} />\n                      </div>\n                      <div className=\"order__box\">\n                        <h3>{item.name}</h3>\n                        <p>Price: ${itemPrice}</p>\n                        <button\n                          className=\"order__quantity__btn order__delete__btn\"\n                          type=\"button\"\n                          onClick={() => handleDeleteItem(item.id)}\n                        >\n                          Delete\n                        </button>\n                        <div className=\"order__quantity\">\n                          <input type=\"number\" value={item.quantity} readOnly />\n                          <div className=\"order__quantity__options\">\n                            <button\n                              className=\"order__quantity__btn order__quantity__btn--up\"\n                              type=\"button\"\n                              onClick={() => handleIncreaseQuantity(item.id)}\n                            >\n                              +\n                            </button>\n                            <button\n                              className=\"order__quantity__btn order__quantity__btn--down\"\n                              type=\"button\"\n                              onClick={() => handleDecreaseQuantity(item.id)}\n                            >\n                              -\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n          <div className=\"order-submit--wrap\">\n            <span>Total price: ${totalPrice}</span>\n            <MainButton>Submit</MainButton>\n          </div>\n        </form>\n      </Container>\n    </section>\n  );\n};\n","import React from 'react';\nimport { Container } from '../components/styled/Container';\nimport { ClientForm } from '../components/Forms/ClientForm/CLientForm';\n\nexport default function ShoppingCart() {\n  return (\n    <section>\n      <Container>\n        <ClientForm />\n      </Container>\n    </section>\n  );\n}\n"],"names":["BaseInput","name","label","type","placeholder","value","onChange","className","MainButton","props","children","validationForm","basketItems","email","phone","address","errors","test","length","ClientForm","cartItems","useSelector","state","menu","items","console","log","dispatch","useDispatch","handleSubmit","e","preventDefault","dataFormInputs","Object","fromEntries","Array","from","FormData","target","map","id","dataForm","keys","errorMessages","values","join","toast","orderForm","total","totalPrice","fetch","method","headers","body","JSON","stringify","response","ok","text","errorMessage","Error","error","reduce","item","price","quantity","Container","onSubmit","index","itemPrice","src","alt","onClick","itemId","remove","readOnly","increaseQuantity","decreaseQuantity","ShoppingCart"],"sourceRoot":""}