{"version":3,"file":"static/js/615.68b1f02d.chunk.js","mappings":"4LAmBWA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,E,sDCjBPG,EAAW,CACtB,CACEJ,GAAI,EACJK,MAAO,QACPC,KAAM,CACJ,CAAEC,KAAM,YAAaC,MAAO,IAAKC,IAAKC,GACtC,CAAEH,KAAM,YAAaC,MAAO,GAAIC,IAAKC,GACrC,CAAEH,KAAM,WAAYC,MAAO,IAAKC,IAAKC,GACrC,CAAEH,KAAM,UAAWC,MAAO,IAAKC,IAAKC,KAGxC,CACEV,GAAI,EACJK,MAAO,UACPC,KAAM,CACJ,CAAEC,KAAM,aAAcC,MAAO,IAAKC,IAAKC,GACvC,CAAEH,KAAM,gBAAiBC,MAAO,GAAIC,IAAKC,GACzC,CAAEH,KAAM,gBAAiBC,MAAO,GAAIC,IAAKC,GACzC,CAAEH,KAAM,gBAAiBC,MAAO,IAAKC,IAAKC,KAG9C,CACEV,GAAI,EACJK,MAAO,QACPC,KAAM,CACJ,CAAEC,KAAM,cAAeC,MAAO,IAAKC,IAAKC,GACxC,CAAEH,KAAM,cAAeC,MAAO,IAAKC,IAAKC,GACxC,CAAEH,KAAM,eAAgBC,MAAO,IAAKC,IAAKC,GACzC,CAAEH,KAAM,gBAAiBC,MAAO,IAAKC,IAAKC,KAG9C,CACEV,GAAI,EACJK,MAAO,SACPC,KAAM,CACJ,CAAEC,KAAM,QAASC,MAAO,GAAIC,IAAKC,GACjC,CAAEH,KAAM,aAAcC,MAAO,GAAIC,IAAKC,GACtC,CAAEH,KAAM,eAAgBC,MAAO,GAAIC,IAAKC,GACxC,CAAEH,KAAM,gBAAiBC,MAAO,GAAIC,IAAKC,M,6CC9BlCC,EAAO,WAClB,OAA4CC,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMb,KAAKc,KAAf,IA+B7BC,EAAkB,SAAAC,GACtB,IAAMC,EAAeN,EAAUO,MAAK,SAAAC,GAAI,OAAIA,EAAKlB,OAASe,EAASf,IAA3B,IACxC,GAAIgB,EACFR,GAASW,EAAAA,EAAAA,IAAiBH,EAAavB,SAClC,CACL,IAAM2B,GAAO,kBACRL,GADQ,IAEXM,SAAU,EACV5B,GAAIN,MAENqB,GAASc,EAAAA,EAAAA,IAAIF,IACbG,EAAAA,GAAAA,QAAc,wCACf,CACF,EAMD,OACE,oBAASC,UAAU,OAAnB,UACE,SAACC,EAAA,EAAD,WACE,iBAAKD,UAAU,gBAAf,WACE,iBAAKA,UAAU,aAAf,WACE,iCACC3B,EAAS6B,KAAI,SAAAR,GAAI,OAChB,mBACEM,UAAS,oBACPlB,IAAmBY,EAAKzB,GAAK,SAAW,IAE1CkC,KAAK,SAELC,QAAS,kBAjBGC,EAiBqBX,EAAKzB,QAhBlDc,EAAkBsB,GADM,IAAAA,CAiBH,EANX,SAQGX,EAAKpB,OAHDoB,EAAKzB,GANI,QAapB,gBAAK+B,UAAU,sBAAf,SACGlB,IACC,gBAAKkB,UAAU,gBAAf,SArEY,WACtB,IAAMM,EAAmBjC,EAASoB,MAAK,SAAAC,GAAI,OAAIA,EAAKzB,KAAOa,CAAhB,IAC3C,OAAIwB,EACKA,EAAiB/B,KAAK2B,KAAI,SAACX,EAAUgB,GAC1C,OACE,iBAAKP,UAAU,aAAf,WACE,gBAAKA,UAAU,cAAf,UACE,gBAAKtB,IAAKa,EAASb,IAAK8B,IAAKjB,EAASf,UAExC,iBAAKwB,UAAU,gBAAf,WACE,wBAAKT,EAASf,QACd,oCAAYe,EAASd,aAEvB,gBAAKuB,UAAU,kBAAf,UACE,mBACEA,UAAU,sBACVG,KAAK,SACLC,QAAS,kBAAMd,EAAgBC,EAAtB,EAHX,6BAT6BgB,EAmBpC,IAEI,IACR,CA0C2CE,aAO7C,EC1Fc,SAASC,IACtB,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["../node_modules/nanoid/index.browser.js","components/Menu/MenuList.js","components/Menu/Menu.jsx","pages/Home.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import cat from '../../Images/sad-cat.png';\n\nexport const MenuList = [\n  {\n    id: 1,\n    title: 'Pizza',\n    food: [\n      { name: 'Pepperoni', price: 120, src: cat },\n      { name: 'Margarita', price: 85, src: cat },\n      { name: '4Seasons', price: 140, src: cat },\n      { name: 'Lavazza', price: 180, src: cat },\n    ],\n  },\n  {\n    id: 2,\n    title: 'Burgers',\n    food: [\n      { name: 'Big Burger', price: 115, src: cat },\n      { name: 'Middle Burger', price: 75, src: cat },\n      { name: 'Little Burger', price: 40, src: cat },\n      { name: 'Senjor Burger', price: 150, src: cat },\n    ],\n  },\n  {\n    id: 3,\n    title: 'Sushi',\n    food: [\n      { name: 'Sushi Set M', price: 200, src: cat },\n      { name: 'Sushi Set L', price: 260, src: cat },\n      { name: 'Sushi Set XL', price: 340, src: cat },\n      { name: 'Sushi Set XXL', price: 550, src: cat },\n    ],\n  },\n  {\n    id: 4,\n    title: 'Drinks',\n    food: [\n      { name: 'Spite', price: 20, src: cat },\n      { name: 'Lemon Hell', price: 60, src: cat },\n      { name: 'Stroke a Cat', price: 40, src: cat },\n      { name: 'Survival Rate', price: 50, src: cat },\n    ],\n  },\n];\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { MenuList } from './MenuList';\nimport { Container } from '../styled/Container';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { add, increaseQuantity } from 'redux/MenuSlice/MenuSlice';\nimport { toast } from 'react-toastify';\n\nimport './Menu.css';\n\nexport const Menu = () => {\n  const [selectedButton, setSelectedButton] = useState(null);\n  const dispatch = useDispatch();\n  const menuItems = useSelector(state => state.food.items);\n\n  const renderFoodItems = () => {\n    const selectedMenuItem = MenuList.find(item => item.id === selectedButton);\n    if (selectedMenuItem) {\n      return selectedMenuItem.food.map((foodItem, index) => {\n        return (\n          <div className=\"food__item\" key={index}>\n            <div className=\"food__photo\">\n              <img src={foodItem.src} alt={foodItem.name} />\n            </div>\n            <div className=\"food__details\">\n              <h3>{foodItem.name}</h3>\n              <p>Price: ${foodItem.price}</p>\n            </div>\n            <div className=\"food__add--wrap\">\n              <button\n                className=\"menu__btn food__add\"\n                type=\"button\"\n                onClick={() => handleAddToCart(foodItem)}\n              >\n                Add to Cart\n              </button>\n            </div>\n          </div>\n        );\n      });\n    }\n    return null;\n  };\n\n  const handleAddToCart = foodItem => {\n    const existingItem = menuItems.find(item => item.name === foodItem.name);\n    if (existingItem) {\n      dispatch(increaseQuantity(existingItem.id));\n    } else {\n      const newItem = {\n        ...foodItem,\n        quantity: 1,\n        id: nanoid(),\n      };\n      dispatch(add(newItem));\n      toast.success('The item has been added successfully.');\n    }\n  };\n\n  const handleButtonClick = buttonId => {\n    setSelectedButton(buttonId);\n  };\n\n  return (\n    <section className=\"menu\">\n      <Container>\n        <div className=\"menu--wrapper\">\n          <div className=\"menu__list\">\n            <h2>Menu</h2>\n            {MenuList.map(item => (\n              <button\n                className={`menu__btn ${\n                  selectedButton === item.id ? 'active' : ''\n                }`}\n                type=\"button\"\n                key={item.id}\n                onClick={() => handleButtonClick(item.id)}\n              >\n                {item.title}\n              </button>\n            ))}\n          </div>\n          <div className=\"menu__content--wrap\">\n            {selectedButton && (\n              <div className=\"menu__content\">{renderFoodItems()}</div>\n            )}\n          </div>\n        </div>\n      </Container>\n    </section>\n  );\n};\n","import { Menu } from 'components/Menu/Menu';\nexport default function Home() {\n  return (\n    <>\n      <Menu />\n    </>\n  );\n}\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","MenuList","title","food","name","price","src","cat","Menu","useState","selectedButton","setSelectedButton","dispatch","useDispatch","menuItems","useSelector","state","items","handleAddToCart","foodItem","existingItem","find","item","increaseQuantity","newItem","quantity","add","toast","className","Container","map","type","onClick","buttonId","selectedMenuItem","index","alt","renderFoodItems","Home"],"sourceRoot":""}